#******************************************************************************
#  @file  ParseRFResults.py
#  @brief Parse results generated by regression framework.
#
#  ---------------------------------------------------------------------------
#  Copyright (c) 2022 Qualcomm Technologies, Inc.
#  All Rights Reserved.
#  Confidential and Proprietary - Qualcomm Technologies, Inc.
#  ---------------------------------------------------------------------------
#******************************************************************************/
#!/usr/bin/env python

import pandas as pd
import os
import sys
import glob


csv_files_list = []

def condformat(row):
    n = row.shape[0]
    col = 'white'
    if (row.RESULT == 'FAILED'):
        col = '#FFFF99'
    elif (row.RESULT == '*'):
        col = 'black'
    elif (row.RESULT == '_'):
        row.RESULT = ''
        col = 'black'
    color = 'background-color: {} ; text-align: center;'.format(col)
    return [color]*n

n = len(sys.argv)
i = 1;
while (i < n):
    if ("--src" in sys.argv[i] and (i+1) < n):
        i += 1
        csv_src_path = sys.argv[i]
        csv_files_list.append(csv_src_path)
    if ("--dir" in sys.argv[i] and (i+1) < n):
        i+=1
        path = sys.argv[i]
        files = glob.glob(path + '/' + '*.csv', recursive=False)
        for filename in files:
            csv_files_list.append(filename)
    else:
        print ("Invalid Input\nResults present in /data/vendor/perfd/RF-*.csv\nUsage:")
        print ("<bin> --src <path to CSV file pulled from target>")
        print ("<bin> --dir <path to directory containing csv pulled from target>")
        exit()
    i+=1

for file in csv_files_list:
    print(file)
    df = pd.read_csv(file, sep="|",index_col=False)
    s = df.style.apply(condformat, axis=1).hide_index()

    with open(file+ ".html", 'w') as f:
        f.write(s.render())
