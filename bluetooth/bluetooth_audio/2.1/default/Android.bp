// FIXME: your file license if you have one

cc_library_shared {
    // FIXME: this should only be -impl for a passthrough hal.
    // In most cases, to convert this to a binderized implementation, you should:
    // - change '-impl' to '-service' here and make it a cc_binary instead of a
    //   cc_library_shared.
    // - add a *.rc file for this module.
    // - delete HIDL_FETCH_I* functions.
    // - call configureRpcThreadpool and registerAsService on the instance.
    // You may also want to append '-impl/-service' with a specific identifier like
    // '-vendor' or '-<hardware identifier>' etc to distinguish it.
    name: "vendor.qti.hardware.bluetooth_audio@2.1-impl",
    relative_install_path: "hw",
    // FIXME: this should be 'vendor: true' for modules that will eventually be
    // on AOSP.
    proprietary: true,
    srcs: [
        "BluetoothAudioProvidersFactory.cpp",
        "BluetoothAudioProvider.cpp",
        "A2dpOffloadAudioProvider.cpp",
        "A2dpSoftwareAudioProvider.cpp",
        "HearingAidAudioProvider.cpp",
    ],
    header_libs: ["libhardware_headers"],
    shared_libs: [
        "android.hardware.audio.common@5.0",
        "libbluetooth_audio_session_qti_2_1",
        "libbase",
        "libcutils",
        "libfmq",
        "libhidlbase",
        "libhidltransport",
        "liblog",
        "libutils",
        "vendor.qti.hardware.bluetooth_audio@2.1",
        "vendor.qti.hardware.bluetooth_audio@2.0",
    ],
}

cc_library_shared {
    name: "libbluetooth_audio_session_qti_2_1",
    defaults: ["hidl_defaults"],
    vendor: true,
    srcs: [
        "session/BluetoothAudioSession.cpp",
        "session/BluetoothAudioSupportedCodecsDB.cpp",
        "session/BluetoothA2dpControl.cpp",
        "session/sw/audio_bluetooth_qti_hw_2_1.cc",
        "session/sw/stream_apis.cc",
        "session/sw/device_port_proxy.cc",
        "session/sw/utils.cc",
        "session/hw/btaudio_offload_qti.cpp",
    ],
    export_include_dirs: [
        "session/",
        "session/sw/",
        "session/hw/",
    ],
    header_libs: ["libhardware_headers"],
    include_dirs: [
        "system/media/audio/include",
        "vendor/qcom/proprietary/bluetooth/bluetooth_audio/2.1/default/session/hw",
        "vendor/qcom/proprietary/bluetooth/audio_bluetooth_qti_hw",
    ],
    shared_libs: [
        "vendor.qti.hardware.bluetooth_audio@2.1",
	"vendor.qti.hardware.bluetooth_audio@2.0",
        "libaudioutils",
        "libbase",
        "libcutils",
        "libfmq",
        "libhidlbase",
        "libhidltransport",
        "liblog",
        "libutils",
    ],
}
