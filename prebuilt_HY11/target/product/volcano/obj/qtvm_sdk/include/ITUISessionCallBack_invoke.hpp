#pragma once
/*===================================================================================
  Copyright (c) 2020, 2023 Qualcomm Technologies, Inc.
  All Rights Reserved.
  Confidential and Proprietary - Qualcomm Technologies, Inc.
  ===================================================================================*/

/*===================================================================================
FILE:  ITUISessionCallBack.idl

DESCRIPTION:  This file contains interface to the TUISession CallBack, which is
normally called by TUICoreService to notify app of fatal errors and events.

=====================================================================================*/

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "impl_base.hpp"
#include "ITUISessionCallBack.hpp"

class TUISessionCallBackImplBase : protected ImplBase, public ITUISessionCallBack {
   public:
    TUISessionCallBackImplBase() {}
    virtual ~TUISessionCallBackImplBase() {}

   protected:
    virtual int32_t invoke(ObjectOp op, ObjectArg* a, ObjectCounts k) {
        switch (ObjectOp_methodID(op)) {
            case OP_OnEvent: {
                if (k != ObjectCounts_pack(1, 0, 0, 0) ||
                    a[0].b.size != 8) {
                    break;
                }
                const uint64_t* event_ptr = (const uint64_t*)a[0].b.ptr;
                return OnEvent(*event_ptr);
            }
            case OP_OnError: {
                if (k != ObjectCounts_pack(0, 0, 0, 0)) {
                    break;
                }
                return OnError();
            }
            default: { return Object_ERROR_INVALID; }
        }
        return Object_ERROR_INVALID;
    }
};

