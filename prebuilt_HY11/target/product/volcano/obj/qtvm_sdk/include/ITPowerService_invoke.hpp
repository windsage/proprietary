#pragma once
/** @file IPowerService.idl */

// Copyright (c) 2023 Qualcomm Technologies, Inc.

// All Rights Reserved.

// Confidential and Proprietary - Qualcomm Technologies, Inc.

/**
  ITWakeLock provides wakeLock Object.
*/

/** @cond */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "impl_base.hpp"
#include "ITPowerService.hpp"

class ITWakeLockImplBase : protected ImplBase, public IITWakeLock {
   public:
    ITWakeLockImplBase() {}
    virtual ~ITWakeLockImplBase() {}

   protected:
    virtual int32_t invoke(ObjectOp op, ObjectArg* a, ObjectCounts k) {
        switch (ObjectOp_methodID(op)) {
            default: { return Object_ERROR_INVALID; }
        }
        return Object_ERROR_INVALID;
    }
};
class ITPowerServiceImplBase : protected ImplBase, public IITPowerService {
   public:
    ITPowerServiceImplBase() {}
    virtual ~ITPowerServiceImplBase() {}

   protected:
    virtual int32_t invoke(ObjectOp op, ObjectArg* a, ObjectCounts k) {
        switch (ObjectOp_methodID(op)) {
            case OP_acquireWakeLock: {
                if (k != ObjectCounts_pack(0, 0, 0, 1)) {
                    break;
                }
                ITWakeLock p_wakeLockObj;
                int32_t r = acquireWakeLock(p_wakeLockObj);
                a[0].o=p_wakeLockObj.extract();
                return r;
            }
            default: { return Object_ERROR_INVALID; }
        }
        return Object_ERROR_INVALID;
    }
};

