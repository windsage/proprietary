/**============================================================================
 * Copyright (c) 2020, 2022 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 ============================================================================*/
/** @file  ITUICoreService.idl */
/**
 * @brief
 * TUICoreService interface provides methods to create Trusted UI Session and to
 * register input service
 * VM-APP/Input service are the client interfaces
 */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "ITrustedInputCallBack.h"
#include "ITUISessionCallBack.h"
#include "ITUISystemSession.h"

#define TUICoreService_OP_createSession 0
#define TUICoreService_OP_deleteSession 1

static inline int32_t
TUICoreService_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
TUICoreService_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
TUICoreService_createSession(Object self, const TUICreateConfig *cfg_ptr, Object InputCBO_val, Object TUISessionCBO_val, Object *TUIsessionObj_ptr)
{
  ObjectArg a[4]={{{0,0}}};
  a[0].bi = (ObjectBufIn) { cfg_ptr, sizeof(TUICreateConfig) };
  a[1].o = InputCBO_val;
  a[2].o = TUISessionCBO_val;

  int32_t result = Object_invoke(self, TUICoreService_OP_createSession, a, ObjectCounts_pack(1, 0, 2, 1));

  *TUIsessionObj_ptr = a[3].o;

  return result;
}

static inline int32_t
TUICoreService_deleteSession(Object self, Object TUIsessionObj_val)
{
  ObjectArg a[1]={{{0,0}}};
  a[0].o = TUIsessionObj_val;

  return Object_invoke(self, TUICoreService_OP_deleteSession, a, ObjectCounts_pack(0, 0, 1, 0));
}



