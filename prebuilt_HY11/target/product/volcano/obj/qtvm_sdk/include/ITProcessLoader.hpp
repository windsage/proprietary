#pragma once
/** @file ITProcessLoader.idl */

// Copyright (c) 2022 Qualcomm Technologies, Inc.

// All Rights Reserved.

// Confidential and Proprietary - Qualcomm Technologies, Inc.

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "ITProcessController.hpp"

class IITProcessLoader {
   public:
    static const int32_t ERROR_INVALID_BUFFER = INT32_C(10);
    static const int32_t ERROR_PROC_NOT_LOADED = INT32_C(11);
    static const int32_t ERROR_PROC_ALREADY_LOADED = INT32_C(12);
    static const int32_t ERROR_EMBED_MISSING_PROPERTY = INT32_C(13);
    static const int32_t ERROR_IMODULE_REGISTRATION = INT32_C(14);
    static const int32_t ERROR_LOADER_NOT_READY = INT32_C(15);

    virtual ~IITProcessLoader() {}

    virtual int32_t loadFromBuffer(const ProxyBase &memObj_ref, ITProcessController &tprocObj_ref) = 0;

   protected:
    static const ObjectOp OP_loadFromBuffer = 0;
};

class ITProcessLoader : public IITProcessLoader, public ProxyBase {
   public:
    ITProcessLoader() {}
    ITProcessLoader(Object impl) : ProxyBase(impl) {}
    virtual ~ITProcessLoader() {}

    virtual int32_t loadFromBuffer(const ProxyBase &memObj_ref, ITProcessController &tprocObj_ref) {
        ObjectArg a[2]={{{0,0}}};
        a[0].o = memObj_ref.get();

        int32_t result = invoke(OP_loadFromBuffer, a, ObjectCounts_pack(0, 0, 1, 1));
        if (Object_OK != result) { return result; }

        tprocObj_ref.consume(a[1].o);

        return result;
    }

};

