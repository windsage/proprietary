#pragma once
/*===================================================================================
  Copyright (c) 2021-2022 Qualcomm Technologies, Inc.
  All Rights Reserved.
  Confidential and Proprietary - Qualcomm Technologies, Inc.
  ===================================================================================*/

/** @file IConfirmationToken.idl  */

/**
 * @addtogroup IConfirmationToken
 * @{
 */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"

class IIConfirmationToken {
   public:
    virtual ~IIConfirmationToken() {}

    virtual int32_t signConfirmationToken(const void* token_ptr, size_t token_len, void* mac_ptr, size_t mac_len, size_t* mac_lenout) = 0;

   protected:
    static const ObjectOp OP_signConfirmationToken = 0;
};

class IConfirmationToken : public IIConfirmationToken, public ProxyBase {
   public:
    IConfirmationToken() {}
    IConfirmationToken(Object impl) : ProxyBase(impl) {}
    virtual ~IConfirmationToken() {}

    virtual int32_t signConfirmationToken(const void* token_ptr, size_t token_len, void* mac_ptr, size_t mac_len, size_t* mac_lenout) {
        ObjectArg a[2]={{{0,0}}};
        a[0].bi = (ObjectBufIn) {token_ptr, token_len * 1};
        a[1].b = (ObjectBuf) {mac_ptr, mac_len * 1};

        int32_t result = invoke(OP_signConfirmationToken, a, ObjectCounts_pack(1, 1, 0, 0));
        if (Object_OK != result) { return result; }

        *mac_lenout = a[1].b.size / 1;

        return result;
    }

};

