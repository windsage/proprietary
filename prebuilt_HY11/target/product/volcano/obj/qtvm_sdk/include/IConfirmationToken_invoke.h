/*===================================================================================
  Copyright (c) 2021-2022 Qualcomm Technologies, Inc.
  All Rights Reserved.
  Confidential and Proprietary - Qualcomm Technologies, Inc.
  ===================================================================================*/
/** @file IConfirmationToken.idl  */
/**
 * @addtogroup IConfirmationToken
 * @{
 */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "IConfirmationToken.h"

#define IConfirmationToken_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##retain(me); \
      } \
      case IConfirmationToken_OP_signConfirmationToken: { \
        if (k != ObjectCounts_pack(1, 1, 0, 0)) { \
          break; \
        } \
        const void *token_ptr = (const void*)a[0].b.ptr; \
        size_t token_len = a[0].b.size / 1; \
        void *mac_ptr = (void*)a[1].b.ptr; \
        size_t mac_len = a[1].b.size / 1; \
        int32_t r = prefix##signConfirmationToken(me, token_ptr, token_len, mac_ptr, mac_len, &mac_len); \
        a[1].b.size = mac_len * 1; \
        return r; \
      } \
    } \
    return Object_ERROR_INVALID; \
  }


