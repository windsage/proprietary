/*
 * Copyright (c) 2020, 2022 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */
/** @file  ITrustedUIApp.idl */
/**
 * @brief
 * TrustedUIApp interface provides methods to start a TrustedUI session in the
 * TEE (Trusted Execute Environment)
 */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "types.h"
#include "IHLOSListenerCBO.h"

#define TrustedUIApp_OP_createSession 0
#define TrustedUIApp_OP_startSession 1
#define TrustedUIApp_OP_stopSession 2
#define TrustedUIApp_OP_deleteSession 3
#define TrustedUIApp_OP_handleCmd 4
#define TrustedUIApp_OP_handleCmdLargeData 5

static inline int32_t
TrustedUIApp_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
TrustedUIApp_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
TrustedUIApp_createSession(Object self, uint32_t displayId_val, uint32_t inputMethod_val, Object HLOSCbo_val)
{
  ObjectArg a[2]={{{0,0}}};
  struct {
    uint32_t m_displayId;
    uint32_t m_inputMethod;
  } i;
  a[0].b = (ObjectBuf) { &i, 8 };
  i.m_displayId = displayId_val;
  i.m_inputMethod = inputMethod_val;
  a[1].o = HLOSCbo_val;

  return Object_invoke(self, TrustedUIApp_OP_createSession, a, ObjectCounts_pack(1, 0, 1, 0));
}

static inline int32_t
TrustedUIApp_startSession(Object self, const TUIConfig *TUIconf_ptr)
{
  ObjectArg a[1]={{{0,0}}};
  a[0].bi = (ObjectBufIn) { TUIconf_ptr, sizeof(TUIConfig) };

  return Object_invoke(self, TrustedUIApp_OP_startSession, a, ObjectCounts_pack(1, 0, 0, 0));
}

static inline int32_t
TrustedUIApp_stopSession(Object self)
{
  return Object_invoke(self, TrustedUIApp_OP_stopSession, 0, 0);
}

static inline int32_t
TrustedUIApp_deleteSession(Object self)
{
  return Object_invoke(self, TrustedUIApp_OP_deleteSession, 0, 0);
}

static inline int32_t
TrustedUIApp_handleCmd(Object self, const void *cmd_ptr, size_t cmd_len, void *response_ptr, size_t response_len, size_t *response_lenout)
{
  ObjectArg a[2]={{{0,0}}};
  a[0].bi = (ObjectBufIn) { cmd_ptr, cmd_len * 1 };
  a[1].b = (ObjectBuf) { response_ptr, response_len * 1 };

  int32_t result = Object_invoke(self, TrustedUIApp_OP_handleCmd, a, ObjectCounts_pack(1, 1, 0, 0));

  *response_lenout = a[1].b.size / 1;

  return result;
}

static inline int32_t
TrustedUIApp_handleCmdLargeData(Object self, Object cmd_val, void *response_ptr, size_t response_len, size_t *response_lenout)
{
  ObjectArg a[2]={{{0,0}}};
  a[1].o = cmd_val;
  a[0].b = (ObjectBuf) { response_ptr, response_len * 1 };

  int32_t result = Object_invoke(self, TrustedUIApp_OP_handleCmdLargeData, a, ObjectCounts_pack(0, 1, 1, 0));

  *response_lenout = a[0].b.size / 1;

  return result;
}



