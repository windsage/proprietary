#pragma once
/** @file ITProcessLoader.idl */

// Copyright (c) 2022 Qualcomm Technologies, Inc.

// All Rights Reserved.

// Confidential and Proprietary - Qualcomm Technologies, Inc.

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "impl_base.hpp"
#include "ITProcessLoader.hpp"
#include "ITProcessController.hpp"

class ITProcessLoaderImplBase : protected ImplBase, public IITProcessLoader {
   public:
    ITProcessLoaderImplBase() {}
    virtual ~ITProcessLoaderImplBase() {}

   protected:
    virtual int32_t invoke(ObjectOp op, ObjectArg* a, ObjectCounts k) {
        switch (ObjectOp_methodID(op)) {
            case OP_loadFromBuffer: {
                if (k != ObjectCounts_pack(0, 0, 1, 1)) {
                    break;
                }
                ProxyBase p_memObj(a[0].o);
                ITProcessController p_tprocObj;
                int32_t r = loadFromBuffer(p_memObj, p_tprocObj);
                p_memObj.extract();
                a[1].o=p_tprocObj.extract();
                return r;
            }
            default: { return Object_ERROR_INVALID; }
        }
        return Object_ERROR_INVALID;
    }
};

