#pragma once
/*===================================================================================
  Copyright (c) 2021-2022 Qualcomm Technologies, Inc.
  All Rights Reserved.
  Confidential and Proprietary - Qualcomm Technologies, Inc.
  ===================================================================================*/

/** @file IConfirmationToken.idl  */

/**
 * @addtogroup IConfirmationToken
 * @{
 */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "impl_base.hpp"
#include "IConfirmationToken.hpp"

class IConfirmationTokenImplBase : protected ImplBase, public IIConfirmationToken {
   public:
    IConfirmationTokenImplBase() {}
    virtual ~IConfirmationTokenImplBase() {}

   protected:
    virtual int32_t invoke(ObjectOp op, ObjectArg* a, ObjectCounts k) {
        switch (ObjectOp_methodID(op)) {
            case OP_signConfirmationToken: {
                if (k != ObjectCounts_pack(1, 1, 0, 0)) {
                    break;
                }
                const void* token_ptr = (const void*)a[0].b.ptr;
                size_t token_len = a[0].b.size / 1;
                void* mac_ptr = (void*)a[1].b.ptr;
                size_t mac_len = a[1].b.size / 1;
                int32_t r = signConfirmationToken(token_ptr, token_len, mac_ptr, mac_len, &mac_len);
                a[1].b.size = mac_len * 1;
                return r;
            }
            default: { return Object_ERROR_INVALID; }
        }
        return Object_ERROR_INVALID;
    }
};

