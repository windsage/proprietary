/**============================================================================
 * Copyright (c) 2020, 2022 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 ============================================================================*/
/** @file  ITUICoreService.idl */
/**
 * @brief
 * TUICoreService interface provides methods to create Trusted UI Session and to
 * register input service
 * VM-APP/Input service are the client interfaces
 */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "ITrustedInputCallBack.h"
#include "ITUISessionCallBack.h"
#include "ITUISystemSession.h"
#include "ITUICoreService.h"

#define TUICoreService_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##retain(me); \
      } \
      case TUICoreService_OP_createSession: { \
        if (k != ObjectCounts_pack(1, 0, 2, 1) || \
          a[0].b.size != 28) { \
          break; \
        } \
        const TUICreateConfig *cfg_ptr = (const TUICreateConfig*)a[0].b.ptr; \
        return prefix##createSession(me, cfg_ptr, a[1].o, a[2].o, &a[3].o); \
      } \
      case TUICoreService_OP_deleteSession: { \
        if (k != ObjectCounts_pack(0, 0, 1, 0)) { \
          break; \
        } \
        return prefix##deleteSession(me, a[0].o); \
      } \
    } \
    return Object_ERROR_INVALID; \
  }


