#pragma once
/** @file  IOpener.idl */

// Copyright (c) 2015, 2017 Qualcomm Technologies, Inc.

// All Rights Reserved.

// Confidential and Proprietary - Qualcomm Technologies, Inc.

/** @cond */

/** 0 is not a valid service ID. */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "impl_base.hpp"
#include "IOpener.hpp"

class IOpenerImplBase : protected ImplBase, public IIOpener {
   public:
    IOpenerImplBase() {}
    virtual ~IOpenerImplBase() {}

   protected:
    virtual int32_t invoke(ObjectOp op, ObjectArg* a, ObjectCounts k) {
        switch (ObjectOp_methodID(op)) {
            case OP_open: {
                if (k != ObjectCounts_pack(1, 0, 0, 1) ||
                    a[0].b.size != 4) {
                    break;
                }
                const uint32_t* id_ptr = (const uint32_t*)a[0].b.ptr;
                ProxyBase p_obj;
                int32_t r = open(*id_ptr, p_obj);
                a[1].o=p_obj.extract();
                return r;
            }
            default: { return Object_ERROR_INVALID; }
        }
        return Object_ERROR_INVALID;
    }
};

