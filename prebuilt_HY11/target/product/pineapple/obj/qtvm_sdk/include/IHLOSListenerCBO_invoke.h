/*
 * Copyright (c) 2020, 2023 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */
/** @file  IHLOSListenerCBO.idl */
/**
 * @brief
 * HLOSListenerCBO interface provides methods to communicate to the TrustedUI
 * HAL in HLOS.
 */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "IMemObject.h"
#include "IHLOSListenerCBO.h"

#define HLOSListenerCBO_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##retain(me); \
      } \
      case HLOSListenerCBO_OP_onComplete: { \
        if (k != ObjectCounts_pack(0, 0, 0, 0)) { \
          break; \
        } \
        return prefix##onComplete(me); \
      } \
      case HLOSListenerCBO_OP_onError: { \
        if (k != ObjectCounts_pack(1, 0, 0, 0) || \
          a[0].b.size != 4) { \
          break; \
        } \
        const int32_t *error_ptr = (const int32_t*)a[0].b.ptr; \
        return prefix##onError(me, *error_ptr); \
      } \
      case HLOSListenerCBO_OP_handleCmd: { \
        if (k != ObjectCounts_pack(1, 1, 0, 1)) { \
          break; \
        } \
        const void *cmd_ptr = (const void*)a[0].b.ptr; \
        size_t cmd_len = a[0].b.size / 1; \
        void *rsp_ptr = (void*)a[1].b.ptr; \
        size_t rsp_len = a[1].b.size / 1; \
        int32_t r = prefix##handleCmd(me, cmd_ptr, cmd_len, &a[2].o, rsp_ptr, rsp_len, &rsp_len); \
        a[1].b.size = rsp_len * 1; \
        return r; \
      } \
    } \
    return Object_ERROR_INVALID; \
  }


