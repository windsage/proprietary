#pragma once
/**============================================================================
 * Copyright (c) 2020, 2022 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 ============================================================================*/

/** @file  ITUICoreService.idl */

/**
 * @brief
 * TUICoreService interface provides methods to create Trusted UI Session and to
 * register input service
 * VM-APP/Input service are the client interfaces
 */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "ITrustedInputCallBack.hpp"
#include "ITUISessionCallBack.hpp"
#include "ITUISystemSession.hpp"

class ITUICoreService {
   public:
    virtual ~ITUICoreService() {}

    virtual int32_t createSession(const TUICreateConfig &cfg_ref, const TrustedInputCallBack &InputCBO_ref, const TUISessionCallBack &TUISessionCBO_ref, TUISystemSession &TUIsessionObj_ref) = 0;
    virtual int32_t deleteSession(const TUISystemSession &TUIsessionObj_ref) = 0;

   protected:
    static const ObjectOp OP_createSession = 0;
    static const ObjectOp OP_deleteSession = 1;
};

class TUICoreService : public ITUICoreService, public ProxyBase {
   public:
    TUICoreService() {}
    TUICoreService(Object impl) : ProxyBase(impl) {}
    virtual ~TUICoreService() {}

    virtual int32_t createSession(const TUICreateConfig &cfg_ref, const TrustedInputCallBack &InputCBO_ref, const TUISessionCallBack &TUISessionCBO_ref, TUISystemSession &TUIsessionObj_ref) {
        ObjectArg a[4]={{{0,0}}};
        a[0].bi = (ObjectBufIn) {&cfg_ref, sizeof(TUICreateConfig)};
        a[1].o = InputCBO_ref.get();
        a[2].o = TUISessionCBO_ref.get();

        int32_t result = invoke(OP_createSession, a, ObjectCounts_pack(1, 0, 2, 1));
        if (Object_OK != result) { return result; }

        TUIsessionObj_ref.consume(a[3].o);

        return result;
    }

    virtual int32_t deleteSession(const TUISystemSession &TUIsessionObj_ref) {
        ObjectArg a[1]={{{0,0}}};
        a[0].o = TUIsessionObj_ref.get();

        return invoke(OP_deleteSession, a, ObjectCounts_pack(0, 0, 1, 0));
    }

};

