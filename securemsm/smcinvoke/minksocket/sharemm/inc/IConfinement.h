/** @file IConfinement.idl */
// Copyright (c) 2023 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "ITAccessPermissions.h"

#define IConfinement_ERROR_INVALID_BUFFER INT32_C(10)

#define IConfinement_OP_getSpecialRules 0
#define IConfinement_OP_getConfinementRules 1

static inline int32_t
IConfinement_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IConfinement_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IConfinement_getSpecialRules(Object self, uint64_t *specialRules_ptr)
{
  ObjectArg a[1]={{{0,0}}};
  a[0].b = (ObjectBuf) { specialRules_ptr, sizeof(uint64_t) };

  return Object_invoke(self, IConfinement_OP_getSpecialRules, a, ObjectCounts_pack(0, 1, 0, 0));
}

static inline int32_t
IConfinement_getConfinementRules(Object self, ITAccessPermissions_rules *outConfRules_ptr)
{
  ObjectArg a[1]={{{0,0}}};
  a[0].b = (ObjectBuf) { outConfRules_ptr, sizeof(ITAccessPermissions_rules) };

  return Object_invoke(self, IConfinement_OP_getConfinementRules, a, ObjectCounts_pack(0, 1, 0, 0));
}



