#pragma once
/*
 * Copyright (c) 2022 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

/**
 * This interface is used by clients to get notification from TZ.
 * Clients should pass this interface object to TZ by using \link IPeripheralState \endlink
 * method @ref registerCallBack.
 */

/** @cond */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"

class IIPeripheralStateCB {
   public:
    static const int32_t ERROR_EMERGENCYCALL = INT32_C(10);

    virtual ~IIPeripheralStateCB() {}

    virtual int32_t notifyPeripheralStateChange(uint8_t state_val) = 0;

   protected:
    static const ObjectOp OP_notifyPeripheralStateChange = 0;
};

class IPeripheralStateCB : public IIPeripheralStateCB, public ProxyBase {
   public:
    IPeripheralStateCB() {}
    IPeripheralStateCB(Object impl) : ProxyBase(impl) {}
    virtual ~IPeripheralStateCB() {}

    virtual int32_t notifyPeripheralStateChange(uint8_t state_val) {
        ObjectArg a[1]={{{0,0}}};
        a[0].b = (ObjectBuf) {&state_val, sizeof(uint8_t)};

        return invoke(OP_notifyPeripheralStateChange, a, ObjectCounts_pack(1, 0, 0, 0));
    }

};
class IIPeripheralState {
   public:
    static const uint8_t STATE_SECURE = UINT8_C(0x01);
    static const uint8_t STATE_NONSECURE = UINT8_C(0x02);
    static const uint8_t STATE_EMERGENCYCALL = UINT8_C(0x03);
    static const uint8_t STATE_PRE_CHANGE = UINT8_C(0x04);
    static const uint8_t STATE_POST_CHANGE = UINT8_C(0x05);

    static const int32_t ERROR_PERIPHERAL_NOT_FOUND = INT32_C(10);

    virtual ~IIPeripheralState() {}

    virtual int32_t registerCallBack(uint32_t peripheral_val, const ProxyBase &periStateCB_ref) = 0;
    virtual int32_t getPeripheralState(uint32_t peripheral_val, uint8_t* state_ptr) = 0;

   protected:
    static const ObjectOp OP_registerCallBack = 0;
    static const ObjectOp OP_getPeripheralState = 1;
};

class IPeripheralState : public IIPeripheralState, public ProxyBase {
   public:
    IPeripheralState() {}
    IPeripheralState(Object impl) : ProxyBase(impl) {}
    virtual ~IPeripheralState() {}

    virtual int32_t registerCallBack(uint32_t peripheral_val, const ProxyBase &periStateCB_ref) {
        ObjectArg a[2]={{{0,0}}};
        a[0].b = (ObjectBuf) {&peripheral_val, sizeof(uint32_t)};
        a[1].o = periStateCB_ref.get();

        return invoke(OP_registerCallBack, a, ObjectCounts_pack(1, 0, 1, 0));
    }

    virtual int32_t getPeripheralState(uint32_t peripheral_val, uint8_t* state_ptr) {
        ObjectArg a[2]={{{0,0}}};
        a[0].b = (ObjectBuf) {&peripheral_val, sizeof(uint32_t)};
        a[1].b = (ObjectBuf) {state_ptr, sizeof(uint8_t)};

        return invoke(OP_getPeripheralState, a, ObjectCounts_pack(1, 1, 0, 0));
    }

};

