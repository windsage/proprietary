// =======================================================================
// Copyright (c) 2022 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
// =======================================================================

/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

#define IWait_WAIT_INFINITE UINT32_C(0xFFFFFFFF)
#define IWait_EVENT_NONE UINT32_C(0)
#define IWait_EVENT_CANCEL UINT32_C(1)

#define IWait_OP_wait 0
#define IWait_OP_signal 1

static inline int32_t
IWait_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IWait_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IWait_wait(Object self, uint32_t msec_val, uint32_t code_val, uint32_t events_val, uint32_t *result_ptr)
{
  ObjectArg a[2];
  struct {
    uint32_t m_msec;
    uint32_t m_code;
    uint32_t m_events;
  } i;
  a[0].b = (ObjectBuf) { &i, 12 };
  i.m_msec = msec_val;
  i.m_code = code_val;
  i.m_events = events_val;
  a[1].b = (ObjectBuf) { result_ptr, sizeof(uint32_t) };

  return Object_invoke(self, IWait_OP_wait, a, ObjectCounts_pack(1, 1, 0, 0));
}

static inline int32_t
IWait_signal(Object self, uint32_t code_val, uint32_t events_val)
{
  ObjectArg a[1];
  struct {
    uint32_t m_code;
    uint32_t m_events;
  } i;
  a[0].b = (ObjectBuf) { &i, 8 };
  i.m_code = code_val;
  i.m_events = events_val;

  return Object_invoke(self, IWait_OP_signal, a, ObjectCounts_pack(1, 0, 0, 0));
}
