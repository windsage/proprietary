#pragma once
/*
 * Copyright (c) 2021-2023 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

/** @file  IQWESTAServices.idl */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"
#include "ITrustedReport.hpp"

class IIQWESTAServices {
   public:
    static const uint32_t PLATFORM_FEATURE_MANAGER = UINT32_C(1);
    static const uint32_t DEVICE_ATTESTATION = UINT32_C(2);
    static const uint32_t TRUSTED_REPORT = UINT32_C(3);
    static const uint32_t SECURE_PROVISIONING = UINT32_C(4);
    static const uint32_t QWES_KEYSTORE = UINT32_C(5);
    static const uint32_t QWES_CONFIG = UINT32_C(6);

    virtual ~IIQWESTAServices() {}

    virtual int32_t createServiceById(const void* license_ptr, size_t license_len, uint32_t serviceId_val, ProxyBase &service_ref) = 0;

   protected:
    static const ObjectOp OP_createServiceById = 0;
};

class IQWESTAServices : public IIQWESTAServices, public ProxyBase {
   public:
    IQWESTAServices() {}
    IQWESTAServices(Object impl) : ProxyBase(impl) {}
    virtual ~IQWESTAServices() {}

    virtual int32_t createServiceById(const void* license_ptr, size_t license_len, uint32_t serviceId_val, ProxyBase &service_ref) {
        ObjectArg a[3]={{{0,0}}};
        a[0].bi = (ObjectBufIn) {license_ptr, license_len * 1};
        a[1].b = (ObjectBuf) {&serviceId_val, sizeof(uint32_t)};

        int32_t result = invoke(OP_createServiceById, a, ObjectCounts_pack(2, 0, 0, 1));
        if (Object_OK != result) { return result; }

        service_ref.consume(a[2].o);

        return result;
    }

};

