// Copyright (c) 2022 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

#define IRPMBService_ERROR_RPMB_MAC INT32_C(10)
#define IRPMBService_ERROR_RPMB_WRITE_COUNTER INT32_C(11)
#define IRPMBService_ERROR_RPMB_ADDR INT32_C(12)
#define IRPMBService_ERROR_RPMB_WRITE INT32_C(13)
#define IRPMBService_ERROR_RPMB_READ INT32_C(14)
#define IRPMBService_ERROR_RPMB_NOT_PROVISIONED INT32_C(15)
#define IRPMBService_ERROR_RPMB_MAC_GENERATION INT32_C(16)
#define IRPMBService_ERROR_RPMB_RNG_GENERATION INT32_C(17)
#define IRPMBService_ERROR_RPMB_NONCE INT32_C(18)
#define IRPMBService_ERROR_RPMB_PROVISIONED INT32_C(19)

#define IRPMBService_OP_rpmbProvisionKey 0
#define IRPMBService_OP_rpmbErase 1
#define IRPMBService_OP_rpmbCheckProv 2

static inline int32_t
IRPMBService_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IRPMBService_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IRPMBService_rpmbProvisionKey(Object self, int32_t keyType_val)
{
  ObjectArg a[1]={{{0,0}}};
  a[0].b = (ObjectBuf) { &keyType_val, sizeof(int32_t) };

  return Object_invoke(self, IRPMBService_OP_rpmbProvisionKey, a, ObjectCounts_pack(1, 0, 0, 0));
}

static inline int32_t
IRPMBService_rpmbErase(Object self)
{
  return Object_invoke(self, IRPMBService_OP_rpmbErase, 0, 0);
}

static inline int32_t
IRPMBService_rpmbCheckProv(Object self)
{
  return Object_invoke(self, IRPMBService_OP_rpmbCheckProv, 0, 0);
}



