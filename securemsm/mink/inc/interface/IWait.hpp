// =======================================================================
// Copyright (c) 2022 Qualcomm Technologies, Inc.
// All Rights Reserved.
// Confidential and Proprietary - Qualcomm Technologies, Inc.
// =======================================================================

#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"

/** @cond */

class IIWait {
   public:
    static const uint32_t WAIT_INFINITE = UINT32_C(0xFFFFFFFF);
    static const uint32_t EVENT_NONE = UINT32_C(0);
    static const uint32_t EVENT_CANCEL = UINT32_C(1);

    virtual ~IIWait() {}

    virtual int32_t wait(uint32_t msec_val, uint32_t code_val, uint32_t events_val, uint32_t* result_ptr) = 0;
    virtual int32_t signal(uint32_t code_val, uint32_t events_val) = 0;

   protected:
    static const ObjectOp OP_wait = 0;
    static const ObjectOp OP_signal = 1;
};

class IWait : public IIWait, public ProxyBase {
   public:
    IWait() {}
    IWait(Object impl) : ProxyBase(impl) {}
    virtual ~IWait() {}

    virtual int32_t wait(uint32_t msec_val, uint32_t code_val, uint32_t events_val, uint32_t* result_ptr) {
        ObjectArg a[2];
        struct s1 {
            uint32_t m_msec;
            uint32_t m_code;
            uint32_t m_events;
        } i;
        a[0].b = (ObjectBuf) {&i, 12};
        i.m_msec = msec_val;
        i.m_code = code_val;
        i.m_events = events_val;
        a[1].b = (ObjectBuf) {result_ptr, sizeof(uint32_t)};

        return invoke(OP_wait, a, ObjectCounts_pack(1, 1, 0, 0));
    }

    virtual int32_t signal(uint32_t code_val, uint32_t events_val) {
        ObjectArg a[1];
        struct s1 {
            uint32_t m_code;
            uint32_t m_events;
        } i;
        a[0].b = (ObjectBuf) {&i, 8};
        i.m_code = code_val;
        i.m_events = events_val;

        return invoke(OP_signal, a, ObjectCounts_pack(1, 0, 0, 0));
    }

};
