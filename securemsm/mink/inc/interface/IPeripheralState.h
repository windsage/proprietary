/*
 * Copyright (c) 2022 Qualcomm Technologies, Inc.
 * All Rights Reserved.
 * Confidential and Proprietary - Qualcomm Technologies, Inc.
 */
/**
 * This interface is used by clients to get notification from TZ.
 * Clients should pass this interface object to TZ by using \link IPeripheralState \endlink
 * method @ref registerCallBack.
 */
/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

#define IPeripheralStateCB_ERROR_EMERGENCYCALL INT32_C(10)

#define IPeripheralStateCB_OP_notifyPeripheralStateChange 0

static inline int32_t
IPeripheralStateCB_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IPeripheralStateCB_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IPeripheralStateCB_notifyPeripheralStateChange(Object self, uint8_t state_val)
{
  ObjectArg a[1]={{{0,0}}};
  a[0].b = (ObjectBuf) { &state_val, sizeof(uint8_t) };

  return Object_invoke(self, IPeripheralStateCB_OP_notifyPeripheralStateChange, a, ObjectCounts_pack(1, 0, 0, 0));
}


#define IPeripheralState_STATE_SECURE UINT8_C(0x01)
#define IPeripheralState_STATE_NONSECURE UINT8_C(0x02)
#define IPeripheralState_STATE_EMERGENCYCALL UINT8_C(0x03)
#define IPeripheralState_STATE_PRE_CHANGE UINT8_C(0x04)
#define IPeripheralState_STATE_POST_CHANGE UINT8_C(0x05)

#define IPeripheralState_ERROR_PERIPHERAL_NOT_FOUND INT32_C(10)

#define IPeripheralState_OP_registerCallBack 0
#define IPeripheralState_OP_getPeripheralState 1

static inline int32_t
IPeripheralState_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IPeripheralState_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IPeripheralState_registerCallBack(Object self, uint32_t peripheral_val, Object periStateCB_val)
{
  ObjectArg a[2]={{{0,0}}};
  a[0].b = (ObjectBuf) { &peripheral_val, sizeof(uint32_t) };
  a[1].o = periStateCB_val;

  return Object_invoke(self, IPeripheralState_OP_registerCallBack, a, ObjectCounts_pack(1, 0, 1, 0));
}

static inline int32_t
IPeripheralState_getPeripheralState(Object self, uint32_t peripheral_val, uint8_t *state_ptr)
{
  ObjectArg a[2]={{{0,0}}};
  a[0].b = (ObjectBuf) { &peripheral_val, sizeof(uint32_t) };
  a[1].b = (ObjectBuf) { state_ptr, sizeof(uint8_t) };

  return Object_invoke(self, IPeripheralState_OP_getPeripheralState, a, ObjectCounts_pack(1, 1, 0, 0));
}



