/********************************************************************
Copyright (c) 2020 Qualcomm Technologies, Inc.
All Rights Reserved.
Confidential and Proprietary - Qualcomm Technologies, Inc.
*********************************************************************/

#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"
#include "IRegisterApp.h"

#define IRegisterApp_DEFINE_INVOKE(func, prefix, type) \
  int32_t func(ObjectCxt h, ObjectOp op, ObjectArg *a, ObjectCounts k) \
  { \
    type me = (type) h; \
    switch (ObjectOp_methodID(op)) { \
      case Object_OP_release: { \
        return prefix##release(me); \
      } \
      case Object_OP_retain: { \
        return prefix##retain(me); \
      } \
      case IRegisterApp_OP_registerApp: { \
        if (k != ObjectCounts_pack(2, 0, 1, 0) || \
          a[0].b.size != 4) { \
          break; \
        } \
        const uint32_t *uid_ptr = (const uint32_t*) a[0].b.ptr; \
        const uint8_t *secret_ptr = (const uint8_t*) a[1].b.ptr; \
        size_t secret_len = a[1].b.size / sizeof(uint8_t); \
        return prefix##registerApp(me, *uid_ptr, a[2].o, secret_ptr, secret_len); \
      } \
      case IRegisterApp_OP_deregisterApp: { \
        if (k != ObjectCounts_pack(2, 0, 0, 0) || \
          a[0].b.size != 4) { \
          break; \
        } \
        const uint32_t *uid_ptr = (const uint32_t*) a[0].b.ptr; \
        const uint8_t *secret_ptr = (const uint8_t*) a[1].b.ptr; \
        size_t secret_len = a[1].b.size / sizeof(uint8_t); \
        return prefix##deregisterApp(me, *uid_ptr, secret_ptr, secret_len); \
      } \
    } \
    return Object_ERROR_INVALID; \
  }


