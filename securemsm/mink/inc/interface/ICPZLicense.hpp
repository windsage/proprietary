#pragma once
/*===================================================================================
    Copyright (c) 2020-2021 Qualcomm Technologies, Inc.
    All Rights Reserved.
    Confidential and Proprietary - Qualcomm Technologies, Inc.
 ===================================================================================*/

/** @file ICPZLicense.idl */

/** @cond */

// AUTOGENERATED FILE: DO NOT EDIT

#include <cstdint>
#include "object.h"
#include "proxy_base.hpp"

class IICPZLicense {
   public:
    static const uint32_t FEATURE_ID_CPZ = UINT32_C(1);
    static const uint32_t FEATURE_ID_WIDEVINE = UINT32_C(2);
    static const uint32_t FEATURE_ID_FSP = UINT32_C(3);

    static const int32_t ERROR_BUSY_TRY_AGAIN = INT32_C(10);
    static const int32_t ERROR_FAILED_TO_CHECK_LICENSE = INT32_C(11);
    static const int32_t ERROR_FAILED_TO_GET_LICENSE = INT32_C(12);
    static const int32_t ERROR_FAILED_TO_VERIFY_LICENSE = INT32_C(13);

    virtual ~IICPZLicense() {}

    virtual int32_t check(uint32_t featureID_val) = 0;

   protected:
    static const ObjectOp OP_check = 0;
};

class ICPZLicense : public IICPZLicense, public ProxyBase {
   public:
    ICPZLicense() {}
    ICPZLicense(Object impl) : ProxyBase(impl) {}
    virtual ~ICPZLicense() {}

    virtual int32_t check(uint32_t featureID_val) {
        ObjectArg a[1];
        a[0].b = (ObjectBuf) {&featureID_val, sizeof(uint32_t)};

        return invoke(OP_check, a, ObjectCounts_pack(1, 0, 0, 0));
    }

};
