/********************************************************************
Copyright (c) 2020 Qualcomm Technologies, Inc.
All Rights Reserved.
Confidential and Proprietary - Qualcomm Technologies, Inc.
*********************************************************************/
/**
 * IDiagnostics is an interface enabling clients to obtain
 * diagnostic information.
 */
/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

typedef struct {
  uint32_t totalSize;
  uint32_t usedSize;
  uint32_t freeSize;
  uint32_t overheadSize;
  uint32_t wastedSize;
  uint32_t largestFreeBlockSize;
} IDiagnostics_HeapInfo;

#define IDiagnostics_OP_queryHeapInfo 0
#define IDiagnostics_OP_queryLoadedApps 1

static inline int32_t
IDiagnostics_release(Object self)
{
  return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IDiagnostics_retain(Object self)
{
  return Object_invoke(self, Object_OP_retain, 0, 0);
}

static inline int32_t
IDiagnostics_queryHeapInfo(Object self, IDiagnostics_HeapInfo *heapInfo_ptr)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { heapInfo_ptr, sizeof(IDiagnostics_HeapInfo) };

  return Object_invoke(self, IDiagnostics_OP_queryHeapInfo, a, ObjectCounts_pack(0, 1, 0, 0));
}

static inline int32_t
IDiagnostics_queryLoadedApps(Object self, void *loadedApps_ptr, size_t loadedApps_len, size_t *loadedApps_lenout)
{
  ObjectArg a[1];
  a[0].b = (ObjectBuf) { loadedApps_ptr, loadedApps_len * 1 };

  int32_t result = Object_invoke(self, IDiagnostics_OP_queryLoadedApps, a, ObjectCounts_pack(0, 1, 0, 0));

  *loadedApps_lenout = a[0].b.size / 1;

  return result;
}



